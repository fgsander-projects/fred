<?php

// Data functions (insert, update, delete, form) for table items_salvos

// This script and data application were generated by AppGini 5.74
// Download AppGini for free from https://bigprof.com/appgini/download/

function items_salvos_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('items_salvos');
	if(!$arrPerm[1]){
		return false;
	}

	$data['memberID'] = makeSafe($_REQUEST['memberID']);
		if($data['memberID'] == empty_lookup_value){ $data['memberID'] = ''; }
	$data['tableName'] = makeSafe($_REQUEST['tableName']);
		if($data['tableName'] == empty_lookup_value){ $data['tableName'] = ''; }
	$data['pkValue'] = makeSafe($_REQUEST['pkValue']);
		if($data['pkValue'] == empty_lookup_value){ $data['pkValue'] = ''; }
	$data['groupID'] = makeSafe($_REQUEST['groupID']);
		if($data['groupID'] == empty_lookup_value){ $data['groupID'] = ''; }
	$data['dateAdded'] = parseCode('<%%creationDate%%>', true, true);
	$data['text'] = br2nl(makeSafe($_REQUEST['text']));

	// hook: items_salvos_before_insert
	if(function_exists('items_salvos_before_insert')){
		$args=array();
		if(!items_salvos_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `items_salvos` set       `memberID`=' . (($data['memberID'] !== '' && $data['memberID'] !== NULL) ? "'{$data['memberID']}'" : 'NULL') . ', `tableName`=' . (($data['tableName'] !== '' && $data['tableName'] !== NULL) ? "'{$data['tableName']}'" : 'NULL') . ', `pkValue`=' . (($data['pkValue'] !== '' && $data['pkValue'] !== NULL) ? "'{$data['pkValue']}'" : 'NULL') . ', `groupID`=' . (($data['groupID'] !== '' && $data['groupID'] !== NULL) ? "'{$data['groupID']}'" : 'NULL') . ', `dateAdded`=' . "'{$data['dateAdded']}'" . ', `text`=' . (($data['text'] !== '' && $data['text'] !== NULL) ? "'{$data['text']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"items_salvos_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: items_salvos_after_insert
	if(function_exists('items_salvos_after_insert')){
		$res = sql("select * from `items_salvos` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!items_salvos_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('items_salvos', $recID, getLoggedMemberID());

	return $recID;
}

function items_salvos_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('items_salvos');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='items_salvos' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='items_salvos' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: items_salvos_before_delete
	if(function_exists('items_salvos_before_delete')){
		$args=array();
		if(!items_salvos_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `items_salvos` where `id`='$selected_id'", $eo);

	// hook: items_salvos_after_delete
	if(function_exists('items_salvos_after_delete')){
		$args=array();
		items_salvos_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='items_salvos' and pkValue='$selected_id'", $eo);
}

function items_salvos_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('items_salvos');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='items_salvos' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='items_salvos' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['memberID'] = makeSafe($_REQUEST['memberID']);
		if($data['memberID'] == empty_lookup_value){ $data['memberID'] = ''; }
	$data['tableName'] = makeSafe($_REQUEST['tableName']);
		if($data['tableName'] == empty_lookup_value){ $data['tableName'] = ''; }
	$data['pkValue'] = makeSafe($_REQUEST['pkValue']);
		if($data['pkValue'] == empty_lookup_value){ $data['pkValue'] = ''; }
	$data['groupID'] = makeSafe($_REQUEST['groupID']);
		if($data['groupID'] == empty_lookup_value){ $data['groupID'] = ''; }
	$data['dateAdded'] = parseMySQLDate('', '<%%creationDate%%>');
	$data['text'] = br2nl(makeSafe($_REQUEST['text']));
	$data['selectedID']=makeSafe($selected_id);

	// hook: items_salvos_before_update
	if(function_exists('items_salvos_before_update')){
		$args=array();
		if(!items_salvos_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `items_salvos` set       `memberID`=' . (($data['memberID'] !== '' && $data['memberID'] !== NULL) ? "'{$data['memberID']}'" : 'NULL') . ', `tableName`=' . (($data['tableName'] !== '' && $data['tableName'] !== NULL) ? "'{$data['tableName']}'" : 'NULL') . ', `pkValue`=' . (($data['pkValue'] !== '' && $data['pkValue'] !== NULL) ? "'{$data['pkValue']}'" : 'NULL') . ', `groupID`=' . (($data['groupID'] !== '' && $data['groupID'] !== NULL) ? "'{$data['groupID']}'" : 'NULL') . ', `dateAdded`=`dateAdded`' . ', `text`=' . (($data['text'] !== '' && $data['text'] !== NULL) ? "'{$data['text']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="items_salvos_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: items_salvos_after_update
	if(function_exists('items_salvos_after_update')){
		$res = sql("SELECT * FROM `items_salvos` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!items_salvos_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='items_salvos' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function items_salvos_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('items_salvos');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: dateAdded
	$combo_dateAdded = new DateCombo;
	$combo_dateAdded->DateFormat = "dmy";
	$combo_dateAdded->MinYear = 1900;
	$combo_dateAdded->MaxYear = 2100;
	$combo_dateAdded->DefaultDate = parseMySQLDate('<%%creationDate%%>', '<%%creationDate%%>');
	$combo_dateAdded->MonthNames = $Translation['month names'];
	$combo_dateAdded->NamePrefix = 'dateAdded';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='items_salvos' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='items_salvos' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `items_salvos` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'items_salvos_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_dateAdded->DefaultDate = $row['dateAdded'];
	}else{
	}

	ob_start();
	?>

	<script>
		// initial lookup values

		jQuery(function() {
			setTimeout(function(){
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/items_salvos_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/items_salvos_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Item details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return items_salvos_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return items_salvos_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return items_salvos_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#memberID').replaceWith('<div class=\"form-control-static\" id=\"memberID\">' + (jQuery('#memberID').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tableName').replaceWith('<div class=\"form-control-static\" id=\"tableName\">' + (jQuery('#tableName').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#pkValue').replaceWith('<div class=\"form-control-static\" id=\"pkValue\">' + (jQuery('#pkValue').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#groupID').replaceWith('<div class=\"form-control-static\" id=\"groupID\">' + (jQuery('#groupID').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#text').replaceWith('<div class=\"form-control-static\" id=\"text\">' + (jQuery('#text').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(dateAdded)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_dateAdded->GetHTML(true) . '</div>' : $combo_dateAdded->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(dateAdded)%%>', $combo_dateAdded->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array();
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(memberID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tableName)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(pkValue)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(groupID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(dateAdded)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(text)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(memberID)%%>', safe_html($urow['memberID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(memberID)%%>', html_attr($row['memberID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(memberID)%%>', urlencode($urow['memberID']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tableName)%%>', safe_html($urow['tableName']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tableName)%%>', html_attr($row['tableName']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tableName)%%>', urlencode($urow['tableName']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(pkValue)%%>', safe_html($urow['pkValue']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(pkValue)%%>', html_attr($row['pkValue']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pkValue)%%>', urlencode($urow['pkValue']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(groupID)%%>', safe_html($urow['groupID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(groupID)%%>', html_attr($row['groupID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(groupID)%%>', urlencode($urow['groupID']), $templateCode);
		$templateCode = str_replace('<%%VALUE(dateAdded)%%>', @date('d/m/Y', @strtotime(html_attr($row['dateAdded']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dateAdded)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['dateAdded'])))), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)){
			$templateCode = str_replace('<%%VALUE(text)%%>', safe_html($urow['text']), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(text)%%>', html_attr($row['text']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(text)%%>', urlencode($urow['text']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(memberID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(memberID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tableName)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tableName)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(pkValue)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pkValue)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(groupID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(groupID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(dateAdded)%%>', '<%%creationDate%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dateAdded)%%>', urlencode('<%%creationDate%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(text)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(text)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('items_salvos');
	if($selected_id){
		$jdata = get_joined_record('items_salvos', $selected_id);
		if($jdata === false) $jdata = get_defaults('items_salvos');
		$rdata = $row;
	}
	$templateCode .= loadView('items_salvos-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: items_salvos_dv
	if(function_exists('items_salvos_dv')){
		$args=array();
		items_salvos_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>