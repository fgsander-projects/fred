<?php
// This script and data application were generated by AppGini 5.73
// Download AppGini for free from https://bigprof.com/appgini/download/

/*
	ajax-callable script that returns code for either a combo drop-down or an auto-complete
	drop-down, based on number of items.

	REQUEST parameters:
	===============
	t: table name
	f: lookup field name
	id: selected id
	p: page number (default = 1)
	s: search term
	o: 0 (default) for text-only or 1 for full options list
	text: selected text
	filterer_[filterer]: name of filterer field to be used to filter the drop-down contents
				must be one of the filteres defined for the concerned field
*/

	$start_ts = microtime(true);

	// how many results to return per call, in case of json output
	$results_per_page = 50;

	$curr_dir = dirname(__FILE__);
	include("$curr_dir/defaultLang.php");
	include("$curr_dir/language.php");
	include("$curr_dir/lib.php");

	handle_maintenance();

	// drop-downs config
	$lookups = array(   
		'item' => array(   
			'colecao' => array(
				'parent_table' => 'colecao',
				'parent_pk_field' => 'id',
				'parent_caption' => '`colecao`.`colecao`',
				'parent_from' => '`colecao` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => true
			),
			'colecao_codigo' => array(
				'parent_table' => 'colecao',
				'parent_pk_field' => 'id',
				'parent_caption' => '`colecao`.`codigo_colecao`',
				'parent_from' => '`colecao` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'grupo' => array(
				'parent_table' => 'grupo',
				'parent_pk_field' => 'id',
				'parent_caption' => '`grupo`.`grupo`',
				'parent_from' => '`grupo` LEFT JOIN `colecao` as colecao1 ON `colecao1`.`id`=`grupo`.`colecao` ',
				'filterers' => array('colecao' => 'colecao'),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => true
			),
			'grupo_codigo' => array(
				'parent_table' => 'grupo',
				'parent_pk_field' => 'id',
				'parent_caption' => '`grupo`.`codigo_grupo`',
				'parent_from' => '`grupo` LEFT JOIN `colecao` as colecao1 ON `colecao1`.`id`=`grupo`.`colecao` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'serie' => array(
				'parent_table' => 'serie',
				'parent_pk_field' => 'id',
				'parent_caption' => '`serie`.`serie`',
				'parent_from' => '`serie` LEFT JOIN `grupo` as grupo1 ON `grupo1`.`id`=`serie`.`grupo` ',
				'filterers' => array('grupo' => 'grupo'),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => true
			),
			'serie_codigo' => array(
				'parent_table' => 'serie',
				'parent_pk_field' => 'id',
				'parent_caption' => '`serie`.`codigo`',
				'parent_from' => '`serie` LEFT JOIN `grupo` as grupo1 ON `grupo1`.`id`=`serie`.`grupo` ',
				'filterers' => array('grupo' => 'grupo'),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'subserie' => array(
				'parent_table' => 'subserie',
				'parent_pk_field' => 'id',
				'parent_caption' => '`subserie`.`subserie`',
				'parent_from' => '`subserie` LEFT JOIN `serie` as serie1 ON `serie1`.`id`=`subserie`.`serie` ',
				'filterers' => array('serie' => 'serie'),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => false
			),
			'tipologia' => array(
				'parent_table' => 'tipologia',
				'parent_pk_field' => 'id',
				'parent_caption' => '`tipologia`.`tipologia`',
				'parent_from' => '`tipologia` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => true
			),
			'idioma' => array(
				'parent_table' => 'idioma',
				'parent_pk_field' => 'id',
				'parent_caption' => '`idioma`.`idioma`',
				'parent_from' => '`idioma` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'local_publicacao_veiculo' => array(
				'parent_table' => 'local_comunicacao',
				'parent_pk_field' => 'id',
				'parent_caption' => '`local_comunicacao`.`local_comunicacao`',
				'parent_from' => '`local_comunicacao` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'tipo_publicacao' => array(
				'parent_table' => 'tipo_publicacao',
				'parent_pk_field' => 'id',
				'parent_caption' => '`tipo_publicacao`.`tipo_publicacao`',
				'parent_from' => '`tipo_publicacao` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'genero' => array(
				'parent_table' => 'genero',
				'parent_pk_field' => 'id',
				'parent_caption' => '`genero`.`genero`',
				'parent_from' => '`genero` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'formato' => array(
				'parent_table' => 'formato',
				'parent_pk_field' => 'id',
				'parent_caption' => '`formato`.`formato`',
				'parent_from' => '`formato` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'suporte' => array(
				'parent_table' => 'suporte',
				'parent_pk_field' => 'id',
				'parent_caption' => '`suporte`.`suporte`',
				'parent_from' => '`suporte` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'documentos_relacionados' => array(
				'parent_table' => 'item',
				'parent_pk_field' => 'id',
				'parent_caption' => 'IF(CHAR_LENGTH(`item`.`identificacao`) || CHAR_LENGTH(`item`.`titulo`), CONCAT_WS(\'\', `item`.`identificacao`, \' - \', `item`.`titulo`), \'\')',
				'parent_from' => '`item` LEFT JOIN `colecao` as colecao1 ON `colecao1`.`id`=`item`.`colecao` LEFT JOIN `grupo` as grupo1 ON `grupo1`.`id`=`item`.`grupo` LEFT JOIN `serie` as serie1 ON `serie1`.`id`=`item`.`serie` LEFT JOIN `subserie` as subserie1 ON `subserie1`.`id`=`item`.`subserie` LEFT JOIN `tipologia` as tipologia1 ON `tipologia1`.`id`=`item`.`tipologia` LEFT JOIN `idioma` as idioma1 ON `idioma1`.`id`=`item`.`idioma` LEFT JOIN `local_comunicacao` as local_comunicacao1 ON `local_comunicacao1`.`id`=`item`.`local_publicacao_veiculo` LEFT JOIN `tipo_publicacao` as tipo_publicacao1 ON `tipo_publicacao1`.`id`=`item`.`tipo_publicacao` LEFT JOIN `genero` as genero1 ON `genero1`.`id`=`item`.`genero` LEFT JOIN `formato` as formato1 ON `formato1`.`id`=`item`.`formato` LEFT JOIN `suporte` as suporte1 ON `suporte1`.`id`=`item`.`suporte` LEFT JOIN `item` as item1 ON `item1`.`id`=`item`.`documentos_relacionados` LEFT JOIN `numero_caixa` as numero_caixa1 ON `numero_caixa1`.`id`=`item`.`numero_caixa` LEFT JOIN `nome_caixa` as nome_caixa1 ON `nome_caixa1`.`id`=`item`.`nome_caixa` LEFT JOIN `numero_pasta` as numero_pasta1 ON `numero_pasta1`.`id`=`item`.`numero_pasta` LEFT JOIN `nome_pasta` as nome_pasta1 ON `nome_pasta1`.`id`=`item`.`nome_pasta` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => false
			),
			'numero_caixa' => array(
				'parent_table' => 'numero_caixa',
				'parent_pk_field' => 'id',
				'parent_caption' => '`numero_caixa`.`numero_caixa`',
				'parent_from' => '`numero_caixa` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'nome_caixa' => array(
				'parent_table' => 'nome_caixa',
				'parent_pk_field' => 'id',
				'parent_caption' => '`nome_caixa`.`nome_caixa`',
				'parent_from' => '`nome_caixa` LEFT JOIN `numero_caixa` as numero_caixa1 ON `numero_caixa1`.`id`=`nome_caixa`.`numero_caixa` ',
				'filterers' => array('numero_caixa' => 'numero_caixa'),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'numero_pasta' => array(
				'parent_table' => 'numero_pasta',
				'parent_pk_field' => 'id',
				'parent_caption' => '`numero_pasta`.`numero_pasta`',
				'parent_from' => '`numero_pasta` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			),
			'nome_pasta' => array(
				'parent_table' => 'nome_pasta',
				'parent_pk_field' => 'id',
				'parent_caption' => '`nome_pasta`.`nome_pasta`',
				'parent_from' => '`nome_pasta` LEFT JOIN `numero_pasta` as numero_pasta1 ON `numero_pasta1`.`id`=`nome_pasta`.`numero_pasta` ',
				'filterers' => array('numero_pasta' => 'numero_pasta'),
				'custom_query' => '',
				'inherit_permissions' => false,
				'list_type' => 0,
				'not_null' => false
			)
		),
		'colecao' => array(  
		),
		'grupo' => array(   
			'colecao' => array(
				'parent_table' => 'colecao',
				'parent_pk_field' => 'id',
				'parent_caption' => '`colecao`.`colecao`',
				'parent_from' => '`colecao` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => false
			)
		),
		'serie' => array(   
			'grupo' => array(
				'parent_table' => 'grupo',
				'parent_pk_field' => 'id',
				'parent_caption' => '`grupo`.`grupo`',
				'parent_from' => '`grupo` LEFT JOIN `colecao` as colecao1 ON `colecao1`.`id`=`grupo`.`colecao` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => true
			)
		),
		'subserie' => array(   
			'serie' => array(
				'parent_table' => 'serie',
				'parent_pk_field' => 'id',
				'parent_caption' => '`serie`.`serie`',
				'parent_from' => '`serie` LEFT JOIN `grupo` as grupo1 ON `grupo1`.`id`=`serie`.`grupo` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => true
			)
		),
		'tipologia' => array(  
		),
		'idioma' => array(  
		),
		'local_comunicacao' => array(  
		),
		'tipo_publicacao' => array(  
		),
		'genero' => array(  
		),
		'formato' => array(  
		),
		'suporte' => array(  
		),
		'numero_caixa' => array(  
		),
		'nome_caixa' => array(   
			'numero_caixa' => array(
				'parent_table' => 'numero_caixa',
				'parent_pk_field' => 'id',
				'parent_caption' => '`numero_caixa`.`numero_caixa`',
				'parent_from' => '`numero_caixa` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => true
			)
		),
		'numero_pasta' => array(  
		),
		'nome_pasta' => array(   
			'numero_pasta' => array(
				'parent_table' => 'numero_pasta',
				'parent_pk_field' => 'id',
				'parent_caption' => '`numero_pasta`.`numero_pasta`',
				'parent_from' => '`numero_pasta` ',
				'filterers' => array(),
				'custom_query' => '',
				'inherit_permissions' => true,
				'list_type' => 0,
				'not_null' => true
			)
		)
	);

	// XSS prevention
	$xss = new CI_Input();
	$xss->charset = datalist_db_encoding;

	// receive and verify user input
	$table_name = $_REQUEST['t'];
	$field_name = $_REQUEST['f'];
	$search_id = makeSafe(from_utf8($_REQUEST['id']));
	$selected_text = from_utf8($_REQUEST['text']);
	$returnOptions = ($_REQUEST['o'] == 1 ? true : false);
	$page = intval($_REQUEST['p']);
	if($page < 1)  $page = 1;
	$skip = $results_per_page * ($page - 1);
	$search_term = makeSafe(from_utf8($_REQUEST['s']));

	if(!isset($lookups[$table_name][$field_name])) die('{ "error": "Invalid table or field." }');

	// can user access the requested table?
	$perm = getTablePermissions($table_name);
	if(!$perm[0] && !$search_id) die('{ "error": "' . addslashes($Translation['tableAccessDenied']) . '" }');

	$field = $lookups[$table_name][$field_name];

	$wheres = array();

	// search term provided?
	if($search_term){
		$wheres[] = "{$field['parent_caption']} like '%{$search_term}%'";
	}

	// any filterers specified?
	if(is_array($field['filterers'])){
		foreach($field['filterers'] as $filterer => $filterer_parent){
			$get = (isset($_REQUEST["filterer_{$filterer}"]) ? $_REQUEST["filterer_{$filterer}"] : false);
			if($get){
				$wheres[] = "`{$field['parent_table']}`.`$filterer_parent`='" . makeSafe($get) . "'";
			}
		}
	}

	// inherit permissions?
	if($field['inherit_permissions']){
		$inherit = permissions_sql($field['parent_table']);
		if($inherit === false && !$search_id) die($Translation['tableAccessDenied']);

		if($inherit['where']) $wheres[] = $inherit['where'];
		if($inherit['from']) $field['parent_from'] .= ", {$inherit['from']}";
	}

	// single value?
	if($field['list_type'] != 2 && $search_id){
		$wheres[] = "`{$field['parent_table']}`.`{$field['parent_pk_field']}`='{$search_id}'";
	}

	if(count($wheres)){
		$where = 'WHERE ' . implode(' AND ', $wheres);
	}

	// define the combo and return the code
	$combo = new DataCombo;
	if($field['custom_query']){
		$qm = array(); $custom_where = ''; $custom_order_by = '2';
		$combo->Query = $field['custom_query'];

		if(preg_match('/ order by (.*)$/i', $combo->Query, $qm)){
			$custom_order_by = $qm[1];
			$combo->Query = preg_replace('/ order by .*$/i', '', $combo->Query);
		}

		if(preg_match('/ where (.*)$/i', $combo->Query, $qm)){
			$custom_where = $qm[1];
			$combo->Query = preg_replace('/ where .*$/i', '', $combo->Query);
		}

		if($where && $custom_where){
			$combo->Query .=  " {$where} AND ({$custom_where}) ORDER BY {$custom_order_by}";
		}elseif($custom_where){
			$combo->Query .=  " WHERE {$custom_where} ORDER BY {$custom_order_by}";
		}else{
			$combo->Query .=  " {$where} ORDER BY {$custom_order_by}";
		}

		$query_match = array();
		preg_match('/select (.*) from (.*)$/i', $combo->Query, $query_match);

		if(isset($query_match[2])){
			$count_query = "SELECT count(1) FROM {$query_match[2]}";
		}else{
			$count_query = '';
		}
	}else{
		$combo->Query = "SELECT " . ($field['inherit_permissions'] ? 'DISTINCT ' : '') . "`{$field['parent_table']}`.`{$field['parent_pk_field']}`, {$field['parent_caption']} FROM {$field['parent_from']} {$where} ORDER BY 2";
		$count_query = "SELECT count(1) FROM {$field['parent_from']} {$where}";
	}
	$combo->table = $table_name;
	$combo->parent_table = $field['parent_table'];
	$combo->SelectName = $field_name;
	$combo->ListType = $field['list_type'];
	if($search_id){
		$combo->SelectedData = $search_id;
	}elseif($selected_text){
		$combo->SelectedData = getValueGivenCaption($combo->Query, $selected_text);
	}

	if($field['list_type'] == 2){
		$combo->Render();
		$combo->HTML = str_replace('<select ', '<select onchange="' . $field_name . '_changed();" ', $combo->HTML);

		// return response
		if($returnOptions){
			?><span id="<?php echo $field_name; ?>-combo-list"><?php echo $combo->HTML; ?></span><?php
		}else{
			?>
				<span id="<?php echo $field_name; ?>-match-text"><?php echo $combo->MatchText; ?></span>
				<input type="hidden" id="<?php echo $field_name; ?>" value="<?php echo html_attr($combo->SelectedData); ?>" />
			<?php
		}
	}else{
		/* return json */
		header('Content-type: application/json');

		if(!preg_match('/ limit .+/i', $combo->Query)){
			if(!$search_id) $combo->Query .= " LIMIT {$skip}, {$results_per_page}";
			if($search_id) $combo->Query .= " LIMIT 1";
		}

		$prepared_data = array();

		// specific caption provided and list_type is not radio?
		if(!$search_id && $selected_text){
			$search_id = getValueGivenCaption($combo->Query, $selected_text);
			if($search_id) $prepared_data[] = array('id' => to_utf8($search_id), 'text' => to_utf8($xss->xss_clean($selected_text)));
		}else{
			$res = sql($combo->Query, $eo);
			while($row = db_fetch_row($res)){
				if(empty($prepared_data) && $page == 1 && !$search_id && !$field['not_null']){
					$prepared_data[] = array('id' => empty_lookup_value, 'text' => to_utf8("<{$Translation['none']}>"));
				}

				$prepared_data[] = array('id' => to_utf8($row[0]), 'text' => to_utf8($xss->xss_clean($row[1])));
			}
		}

		if(empty($prepared_data)){ $prepared_data[] = array('id' => '', 'text' => to_utf8($Translation['No matches found!'])); }

		echo json_encode(array(
			'results' => $prepared_data,
			'more' => (@db_num_rows($res) >= $results_per_page),
			'elapsed' => round(microtime(true) - $start_ts, 3)
		));
	}

